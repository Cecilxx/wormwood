<style lang="less" scoped>
.container {
  padding-bottom: 100rpx;

  .btn-select-wrap {
    position: fixed;
    bottom: 0;
    left: 0;
    width: 100%;
  }
}
</style>

<template>
  <view class="container">
    <swiper
      style="height: 100vw;"
      imgStyle="height: 100%"
      :autoplay.sync="autoplay"
      :imgUrls.sync="imgUrls"
      @clickFn.user="previewImg"
    />

    <detailBase />
    <detailTab />

    <view class="btn-select-wrap">
      <detailSelect wx:if="{{showSelect}}" />
      <detailBtn @clickBuy.user="clickBuy" @clickCar.user="clickCar" />
    </view>
  </view>
</template>

<script>
import wepy from 'wepy'
import { connect } from 'wepy-redux'
import Swiper from 'components/common/swiper'
import DetailBase from 'components/detailBase/index'
import DetailTab from 'components/detailTab/index'
import DetailBtn from 'components/detailBtn'
import DetailSelect from 'components/detailSelect'
import { asyncDetailInit } from 'store/actions/detail'
import { DETAIL_DEFAULT } from 'store/types/detail'

@connect(
  {
    showSelect(state) {
      return state.detail.showSelect
    },
    originData(state) {
      return state.detail.initData
    }
  },
  {
    asyncDetailInit,
    defaultDetail: DETAIL_DEFAULT
  }
)
export default class Index extends wepy.page {
  config = {
    navigationBarTitleText: 'detail'
  }
  components = {
    swiper: Swiper,
    detailBase: DetailBase,
    detailTab: DetailTab,
    detailBtn: DetailBtn,
    detailSelect: DetailSelect
  }
  mixins = []
  data = {
    autoplay: false,
    baseInfo: {},
    tabInfo: {},
    id: ''
  }
  computed = {
    imgUrls() {
      return this.originData ? this.originData.imgUrls : []
    }
  }
  methods = {
    previewImg() {
      wepy.previewImage({
        urls: this.originData.imgUrls
      })
    }
  }
  events = {}
  onLoad() {
    console.log('detail onUnload', 'defaultDefault')
    this.methods.asyncDetailInit()
  }
  onShow() {
    console.log('detail onShow')
  }
  onUnload() {
    console.log('detail onUnload', 'defaultDefault')
    this.methods.defaultDetail()
  }
  onHide() {
    console.log('detail onHide')
  }
}
</script>
